<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>210</x><y>1330</y><w>160</w><h>240</h></coordinates><panel_attributes>Logger

--
_+ DEBUG_LEVEL: number_
- source: string
--
_+ setDebugLevel(level)_

+ constructor(sourceName)
+ trace(text)
+ debug(text)
+ info(text)
+ warn(text)
+ error(text)
+ fatal(text)
style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1990</x><y>850</y><w>230</w><h>360</h></coordinates><panel_attributes>ResultSeriesType
--
_+ FAMILY_
_+ GENE_
_+ CALL_
_+ GENE_COUNT_
_+ TOP_CLONES_
_+ JUNCTION_LENGTH_
_+ JUNCTION_AA_LENGTH_

- typeCode : string;
- typeName : string;
- unique : boolean;
- exists : boolean;
- productive : boolean;
- rearrangement : boolean;
- duplicate : boolean;
--
+ constructor()
+ toString() : string

_+ contains(code) : boolean_
_+ getByName(name) : ResultSeriesType_
style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1720</x><y>1040</y><w>100</w><h>30</h></coordinates><panel_attributes>GeneType</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>210</x><y>1590</y><w>100</w><h>30</h></coordinates><panel_attributes>Common</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>700</x><y>140</y><w>290</w><h>450</h></coordinates><panel_attributes>Properties

--
- chartType : string
- title : string
- subtitle : string
- xLabel : string
- yLabel :string
- stackingType : string
- dataType: string
- drilldown: boolean
- sort : boolean
- animation : boolean
- percentage : boolean
- alpha3D : Number
- beta3D : Number
- depth3D : Number
- id: string
- data: JSON

- logger : Logger

--
+ constructor()
+ get...()
+ set...(value)
+ updateWith(properties:Properties)

_+ create(properties : Properties | JSON) : Properties_
style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1990</x><y>1220</y><w>250</w><h>410</h></coordinates><panel_attributes>ResultSeriesDataItem

--
- name: string
- x: number
- y: number
- z: number
- color : Number
- drilldown: string
- logger : Logger

--
+ constructor()
+ setName(value) : ResultSeriesDataItem
+ getName() : string
+ setX(value) : ResultSeriesDataItem
+ getX() : Number
+ setY(value) : ResultSeriesDataItem
+ getY() : Number
+ setZ(value) : ResultSeriesDataItem
+ getZ() : Number
+ setColor(value) : ResultSeriesDataItem
+ getColor() : Number
+ setDrilldown(value) : ResultSeriesDataItem
+ getDrilldown() : Name
+ toJSON() : JSON
style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1720</x><y>1090</y><w>180</w><h>390</h></coordinates><panel_attributes>ResultSeries

--
- type: ResultSerieType
- repertoireId: string
- sampleProcessingId: string
- dataProcessingId: string
- name:string
- id: string
- fieldname: string
- data: ResultSeriesDataItem [ ]
- parentName: string
- color: Number
- type : ResultSeriesType
- stack : name
- logger : Logger


--
+ constructor()
+ set...(value)
+ get...()
+ toJSON()
+ asHighchartSeries()

style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1270</x><y>500</y><w>220</w><h>360</h></coordinates><panel_attributes>&lt;&lt;Abstract&gt;&gt;
/Result/
--
- data: JSON
- drilldown
- parser
- logger : Logger

--
+ constructor(data : JSON)
+ setData(value : JSON)
+ getData() : JSON
+ setParser(parser : Parser)
+ getParser() : Parser
+ setDrilldown(value : boolean) : Result
+ parse()

/+ isMultipleSeries() : boolean/

//+ preparse(data : JSON)/
//+ onparse(data : JSON)/
//+ postparse(data : JSON)/

I need a factory here to build instances 
of concrete classes

style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1200</x><y>980</y><w>320</w><h>320</h></coordinates><panel_attributes>StatsResult

--
- geneType: GeneType
- series: ResultSerie [ ]
- seriesByRepertoire: {repertoireId: ResultSerie [ ]}
- geneSeriesByFamily: {familyName: ResultSerie [ ]}
- cellSeriesByGene: {geneName:ResultSerie [ ]}
- familySeriesByRepertoire: {repertoireId: ResultSerie [ ]}
- geneSeriesByRepertoire: {repertoireId: ResultSerie [ ]}
- callSeriesByRepertoire: {repertoireId: ResultSerie [ ]}
- multipleSeries: boolean
- defaultProperties: Properties

--
- addToStructures (serie:ResultSerie)
+ constructor(type: GeneType, data: JSON = undefined)
+ get...()
+ iisMultipleSeries: boolean
//+ preparse(originalResult:JSON)
//+ parse(originalResult:JSON)

style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>210</x><y>500</y><w>260</w><h>260</h></coordinates><panel_attributes>&lt;&lt;Abstract&gt;&gt;
/Chart/
--
- id: string
- properties: Properties
- result: Result
- logger : Logger

--
+ constructor(properties: Properties)
+ setResult(result: Result) : Chart
+ setProperties(properties: Properties) : Chart
+ getResult() : Result
+ getProperties() : Properties
+ getId() : String
/+ plot()/
style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>460</x><y>590</y><w>830</w><h>40</h></coordinates><panel_attributes>lt=-
m1=
m2=
result</panel_attributes><additional_attributes>810;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1350</x><y>850</y><w>30</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>Relation</id><coordinates><x>1510</x><y>1150</y><w>230</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
series</panel_attributes><additional_attributes>10;20;210;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1890</x><y>1230</y><w>120</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
data</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1890</x><y>1120</y><w>120</w><h>40</h></coordinates><panel_attributes>lt=-
m1=
m2=
type</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1510</x><y>1040</y><w>230</w><h>40</h></coordinates><panel_attributes>lt=-
m1=
m2=
geneType</panel_attributes><additional_attributes>10;20;210;20</additional_attributes></element><element><id>Relation</id><coordinates><x>980</x><y>390</y><w>310</w><h>190</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1
&lt; defaultProperties</panel_attributes><additional_attributes>10;10;110;10;110;160;290;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>0</y><w>320</w><h>200</h></coordinates><panel_attributes>VisualizationLibrary
--
- charts : { id: Chart }
+ product
+ version
--
+ constructor()
+ get(chartIdentifier) : Chart
+ createProperties() : Properties
+ setDebugLevel(level)

+ createChart(properties : Properties = undefined) : Chart
style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>240</x><y>900</y><w>210</w><h>170</h></coordinates><panel_attributes>HichartsChart
--
- chart: Highcharts.chart
- highcharts: Highcharts
- logger : Logger

--
- checkHighcharts()
+ constructor(properties: Properties)
+ getChart() : Highcharts.chart
+ plot()
style=autoresize</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>330</x><y>750</y><w>30</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1740</x><y>503</y><w>170</w><h>210</h></coordinates><panel_attributes>&lt;&lt;Abstract&gt;&gt;
/Parser/
--
- series : ResultSeries[]
- logger : Logger

--
+ constructor(data : JSON)
+ getSeries() : ResultSeries[]

/+ preparse(data : JSON)/
/+ onparse(data : JSON)/
/+ postparse(data : JSON)/
style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1486</x><y>489</y><w>270</w><h>130</h></coordinates><panel_attributes>lt=-
m1=
m2=
parser </panel_attributes><additional_attributes>10;11;250;104</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1715</x><y>749</y><w>220</w><h>150</h></coordinates><panel_attributes>&lt;&lt;Abstract&gt;&gt;
/DrilldownParser/
--
- drilldownSeries : ResultSeries[]
- logger : Logger

--
+ constructor()
+ getDrilldownSeries() : ResultSeries[]
style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1815</x><y>709</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>205</x><y>1631</y><w>100</w><h>30</h></coordinates><panel_attributes>DebugTimer</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>455</x><y>123</y><w>260</w><h>470</h></coordinates><panel_attributes>lt=-
m1=1
m2=1
properties &gt;</panel_attributes><additional_attributes>10;440;130;440;130;170;240;17</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1296</x><y>1402</y><w>90</w><h>140</h></coordinates><panel_attributes>... StatsResult

--


--


style=autoresize
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1344</x><y>1290</y><w>40</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;12;110</additional_attributes></element></diagram>